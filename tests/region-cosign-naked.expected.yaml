---
# Source: cosign/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cosign-sa
  namespace: openshift-pipelines
  annotations: {}
---
# Source: cosign/templates/cosign-cm-script.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: create-cosign-pubkey
  namespace: openshift-pipelines
data:
  cosign.sh: |
    #!/bin/bash
    # check for signing-secrets in openshift-pipelines
    SECRET=$(oc get secret signing-secrets -n openshift-pipelines)
    if [[ $? -ne 0 ]]
      then
        export COSIGN_PASSWORD=$(openssl rand -base64 32) 
        cosign generate-key-pair k8s://openshift-pipelines/signing-secrets --output-file /tmp/cosign.pub
        oc create secret generic cosign-pubkey --from-file=/tmp/cosign.pub 
      else
        echo "the signing-secrets secret exists in openshift-pipelines"
    fi
---
# Source: cosign/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cosign-mgmt
  namespace: openshift-pipelines
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-15"
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - patch
      - create
      - update
      - delete
---
# Source: cosign/templates/rbac/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cosign-mgmt
  namespace: openshift-pipelines
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-15"
subjects:
- kind: ServiceAccount
  name: cosign-sa
  namespace: openshift-pipelines
  apiGroup: ""
roleRef:
  kind: Role
  name: cosign-mgmt
  apiGroup: rbac.authorization.k8s.io
---
# Source: cosign/templates/cosign_pubkey-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PostSync
  name: create-cosign-pubkey
  namespace: openshift-pipelines
spec:
  template:
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/openshift/cosign:latest
        command:
        - /bin/bash
        - -c
        - |
           '/tmp/cosign.sh'
        name: create-cosign-pubkey
        volumeMounts:
          - mountPath: /tmp/cosign.sh
            name: cosign
            subPath: cosign.sh
      volumes:
        - name: cosign
          configMap:
            name: create-cosign-pubkey
            defaultMode: 0755
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: cosign-sa
      serviceAccountName: cosign-sa
      terminationGracePeriodSeconds: 60
---
# Source: cosign/templates/buildconfig.yaml
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: cosign
  namespace: openshift
  labels:
    app: cosign
spec:
  source:
    type: Git
    git:
      uri: https://github.com/hybrid-cloud-demos/devsecops-tools
    contextDir: containerFiles/cosign
  strategy:
    type: Docker
    dockerStrategy:
      dockerfilePath: Containerfile
      from:
        kind: ImageStreamTag
        namespace: openshift
        name: cli:latest
  output:
    to:
      kind: ImageStreamTag
      name: cosign:latest
  triggers:
  - type: ImageChange
---
# Source: cosign/templates/imagestream.yaml
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: cosign
  namespace: openshift
spec:
  lookupPolicy:
    local: false
  tags:
  - name: latest
    from:
      kind: DockerImage
      name: latest
    referencePolicy:
      type: Source
